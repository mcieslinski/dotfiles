#!/bin/bash

# Add J-Link to path.
export PATH=/opt/SEGGER/JLink:${PATH}:~/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin

export GOPATH=${HOME}/go_workspace
export GOBIN=${GOPATH}/bin
export PATH=/opt:${PATH}:${GOBIN}:~/scripts

#apt-cache policy golang | grep -i "installed" | grep -i "none" &> /dev/null

if [ $? -eq 0 ]; then
    export GOROOT=/opt/go
    export PATH=${PATH}:${GOROOT}/bin
fi

if [ -d ${HOME}/scripts ]; then
    export PATH=${PATH}:${HOME}/scripts
fi

export CATALINA_HOME=/opt/apache-tomcat-7.0.68
alias tomup=${CATALINA_HOME}/bin/startup.sh
alias tomdown=${CATALINA_HOME}/bin/shutdown.sh
alias tomwatch="tail -f ${CATALINA_HOME}/logs/catalina.out"

if [ -d /opt/gradle-2.12 ]; then
    export PATH=${PATH}:/opt/gradle-2.12/bin
fi

function fix_chrome_launcher()
{
    local gcdesktop=/usr/share/applications/google-chrome.desktop

    if [ ! -e ${gcdesktop} ]; then
        echo "Desktop file for chrome doesn't exist where expected."
        echo "Maybe time to fix function for a new OS?"
        return 1;
    fi

    echo "Adding --force-dark-mode to chrome Exec lines in desktop file."

    sudo sed -i '/Exec/s/$/ --force-dark-mode/' ${gcdesktop}
}

alias tks="tmux kill-session -t 0"
function tmux_init()
{
    cd ${HOME}

    # Source Window
    tmux rename-window "Source"
    tmux split-window -p 10
    tmux split-window -h -t 1
    tmux select-pane -t 0.0

    ## Search Window
    #tmux new-window -n "Search"

    ## Build/Program Window
    #tmux new-window -n "Build/Program"
    #tmux split-window -h -t 1.0

    # Debug/Run Window
    tmux new-window -n "Debug/Run"
    tmux split-window -t 1.0 -h
    tmux split-window -t 1.1

    ## Misc Window
    tmux new-window -n "Misc"
    tmux split-window -t 2.0 -h
    tmux split-window -t 2.1 
    tmux split-window -t 2.0

    ## Go back home
    tmux select-window -t 0
    tmux select-pane -t 0
}

function tmux_sourcewin()
{
    if [ "${1}" = "current" ]; then
        tmux split-window -p 10 -c ${HOME}
        tmux split-window -t 1 -h -c ${HOME}
    else
        local fullwin=$(tmux new-window -aP -c ${HOME})
        local tsession=$(echo $fullwin | cut -d ':' -f 1)
        local twindow=$(echo $fullwin | cut -d ':' -f 2 | cut -d '.' -f 1)
        local tpane=$(echo $fullwin | cut -d '.' -f 2)
        echo "${twindow}"

        tmux split-window -t ${twindow}.${tpane} -p 10 -c ${HOME}
        tmux split-window -t ${twindow}.$((${tpane} + 1)) -h -c ${HOME}
        tmux rename-window -t ${twindow} "Sourcewin"
    fi
}

function tmux_debugwin()
{
    if [ "${1}" = "current" ]; then
        tmux split-window -h -c ${HOME}
        tmux split-window -t 1 -c ${HOME}
    else
        local fullwin=$(tmux new-window -aP -c ${HOME})
        local tsession=$(echo $fullwin | cut -d ':' -f 1)
        local twindow=$(echo $fullwin | cut -d ':' -f 2 | cut -d '.' -f 1)
        local tpane=$(echo $fullwin | cut -d '.' -f 2)

        tmux split-window -t ${twindow}.${tpane} -h -c ${HOME}
        tmux split-window -t ${twindow}.$((${tpane} + 1)) -c ${HOME}
        tmux rename-window -t ${twindow} "Debugwin"
    fi
}
